[
  {
    "question": "var, let, and const differ in what ways?",
    "correct_answer": "One has function scope, two have block scope, one cannot be reassigned and cannot be redeclared.",
    "incorrect_answers": ["One has function scope, one has block scope, one has lexical scope.", "One has function scope, two have block scope, one contains objects you cannot change.", "One has function scope, two have block scope, one cannot be reassigned but can be redeclared."]
  },
  {
    "question": "Which isn't a JavaScript value type?",
    "correct_answer": "Object",
    "incorrect_answers": [
      "Symbol",
      "Null",
      "Undefined"
    ]
  },
  {
    "question": "Which isn't a way to initialize an object?",
    "correct_answer": "Calling the Object constructor",
    "incorrect_answers": [
      "Evaluating object literal syntax",
      "Creating an instance of Object",
      "Invoking the Object constructor's create method"
    ]
  },
  {
    "question": "Which of the following is true about variable naming conventions in JavaScript?",
    "correct_answer": "Both of the above.",
    "incorrect_answers": ["You should not use any of the JavaScript reserved keyword as variable name.", "JavaScript variable names should not start with a numeral (0-9).", "None of the above."]
  },
  {
    "question": "Which is a value as well as a type?",
    "correct_answer": "Null and Undefined",
    "incorrect_answers": ["NaN", "Infinity", "Boolean"]
  },
  {
    "question": "What does it mean to say Function is first-class?",
    "correct_answer": "A Function is an object and can be treated as a value.",
    "incorrect_answers": ["Function declarations are hoisted and invoked before other code in the same function scope.", "All objects are created by invoking a constructor function.", "Functions are a data type."]
  },
  {
    "question": "Which doesn't have lexical scope?",
    "correct_answer": "The this keyword in arrow functions",
    "incorrect_answers": ["Variables in closures", "Variables in arrow functions", "The this keyword in object literals"]
  },
  {
    "question": "Which of the following function of Boolean object returns a string containing the source of the Boolean object?",
    "correct_answer": "toSource()",
    "incorrect_answers": ["valueOf()", "toString()", "None of the above."]
  },
  {
    "question": "Which is the most accurate way to describe the 'this' keyword?",
    "correct_answer": "The object instance the current function is being called on behalf of",
    "incorrect_answers": ["The execution context", "The object the current function is a method of", "The function that the current function was invoked from"]
  },
  {
    "question": "What do all initialized objects include?",
    "correct_answer": "Both are correct",
    "incorrect_answers": ["Their constructor's properties, methods, and prototype chain", "Object as their base class", "None of the Above"]
  }
]
